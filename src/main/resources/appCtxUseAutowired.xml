<?xml version="1.0" encoding="UTF-8"?>
       
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!-- 어노테이션 사용하기 위함 -->
<context:annotation-config/>

<!-- 
@Autowired
: 주입하려고 하는 객체의 타입이 일치하는 객체를 자동으로 주입한다. 생성자,프로퍼티,메소드 사용가능.
-> required=false 를 사용하면, 스프링컨테이너에 빈객체가 생성되어 있지 않다면 exception하지 않고 넘어감.
@Resource
: 주입하려고 하는 객체의 이름이 일치하는 객체를 자동으로 주입한다. 생성자에는 사용 못함. 프로퍼티/메소드에만 사용가능.
@Inject
: Autowired와 거의 비슷. 차이점이라면, required 속성 지원하지 않음.
-> Named를 사용 할 수 있다. (autowired의 qualifier와 같은 개념. 대신 스프링 컨테이너 파일에 추가하지 않고 어노테이션에만 Name으로 명시)
 -->
<bean id="wordDao1" class="com.word.dao.WordDao">
	<qualifier value="usedDao"></qualifier>
</bean>
<bean id="wordDao2" class="com.word.dao.WordDao"/>
<bean id="wordDao3" class="com.word.dao.WordDao"/>

<bean id="registerService" class="com.word.service.WordRegisterService" /> 
<bean id="searchService" class="com.word.service.WordSearchService" /> 




</beans>
       